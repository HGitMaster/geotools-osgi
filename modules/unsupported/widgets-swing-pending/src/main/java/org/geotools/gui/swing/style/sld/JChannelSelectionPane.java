/*
 *    GeoTools - The Open Source Java GIS Toolkit
 *    http://geotools.org
 * 
 *    (C) 2002-2008, Open Source Geospatial Foundation (OSGeo)
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
package org.geotools.gui.swing.style.sld;

import java.awt.Component;
import org.geotools.gui.swing.style.StyleElementEditor;
import org.geotools.map.MapLayer;
import org.geotools.styling.ChannelSelection;
import org.geotools.styling.ChannelSelectionImpl;
import org.geotools.styling.SelectedChannelType;

/**
 * Channel selection panel
 * 
 * @author  Johann Sorel
 */
public class JChannelSelectionPane extends javax.swing.JPanel implements StyleElementEditor<ChannelSelection>{

    private MapLayer layer = null;
    private ChannelSelection channel = null;

    /** 
     * Creates new form JFillPanel 
     */
    public JChannelSelectionPane() {
        initComponents();
        lock();
    }

    public void setLayer(MapLayer layer) {
        this.layer = layer;
    }

    public MapLayer getLayer(){
        return layer;
    }
    
    public void setEdited(ChannelSelection channel) {
        this.channel = channel;
        if (channel != null) {
            guiGray.setEdited(channel.getGrayChannel());
            SelectedChannelType[] sct = channel.getRGBChannels();
            
            if(sct!= null && sct.length==3){
                guiRed.setEdited(sct[0]);
                guiGreen.setEdited(sct[1]);
                guiBlue.setEdited(sct[2]);
            }
        }
        
        lock();
    }

    public ChannelSelection getEdited() {

        if (channel == null) {
            channel = new ChannelSelectionImpl();
        }

        apply();
        return channel;
    }

    public void apply() {
        if (channel != null) {
            if(guiChkRGB.isSelected()){
                SelectedChannelType[] sct = new SelectedChannelType[3];
                sct[0] = guiRed.getEdited();
                sct[1] = guiGreen.getEdited();
                sct[2] = guiBlue.getEdited();
            }else{
                channel.setGrayChannel(guiGray.getEdited());
            }
        }
    }

    public Component getComponent(){
        return this;
    }
    
    private void lock(){
        boolean b = guiChkRGB.isSelected();
        
        guiRed.setEnabled(b);
        guiGreen.setEnabled(b);
        guiBlue.setEnabled(b);
        guiGray.setEnabled(!b);
        guiLblRed.setEnabled(b);
        guiLblGreen.setEnabled(b);
        guiLblBlue.setEnabled(b);
        guiLblGray.setEnabled(!b);
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        group = new javax.swing.ButtonGroup();
        guiGray = new org.geotools.gui.swing.style.sld.JSelectedChannelTypePane();
        guiRed = new org.geotools.gui.swing.style.sld.JSelectedChannelTypePane();
        guiLblGray = new org.jdesktop.swingx.JXTitledSeparator();
        guiLblRed = new org.jdesktop.swingx.JXTitledSeparator();
        guiGreen = new org.geotools.gui.swing.style.sld.JSelectedChannelTypePane();
        guiLblGreen = new org.jdesktop.swingx.JXTitledSeparator();
        guiLblBlue = new org.jdesktop.swingx.JXTitledSeparator();
        guiBlue = new org.geotools.gui.swing.style.sld.JSelectedChannelTypePane();
        jSeparator1 = new javax.swing.JSeparator();
        guiChkRGB = new javax.swing.JRadioButton();
        guiChkGray = new javax.swing.JRadioButton();

        guiLblGray.setForeground(new java.awt.Color(102, 102, 102));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/geotools/gui/swing/style/sld/Bundle"); // NOI18N
        guiLblGray.setTitle(bundle.getString("gray")); // NOI18N
        guiLblGray.setFont(guiLblGray.getFont().deriveFont(guiLblGray.getFont().getStyle() | java.awt.Font.BOLD));

        guiLblRed.setForeground(new java.awt.Color(204, 0, 0));
        guiLblRed.setTitle(bundle.getString("red")); // NOI18N
        guiLblRed.setFont(guiLblRed.getFont().deriveFont(guiLblRed.getFont().getStyle() | java.awt.Font.BOLD));

        guiLblGreen.setForeground(new java.awt.Color(0, 204, 0));
        guiLblGreen.setTitle(bundle.getString("green")); // NOI18N
        guiLblGreen.setFont(guiLblGreen.getFont().deriveFont(guiLblGreen.getFont().getStyle() | java.awt.Font.BOLD));

        guiLblBlue.setForeground(new java.awt.Color(0, 0, 204));
        guiLblBlue.setTitle(bundle.getString("blue")); // NOI18N
        guiLblBlue.setFont(guiLblBlue.getFont().deriveFont(guiLblBlue.getFont().getStyle() | java.awt.Font.BOLD));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        guiChkRGB.setSelected(true);
        guiChkRGB.setText("RGB");
        guiChkRGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guiChkRGBActionPerformed(evt);
            }
        });

        guiChkGray.setText("Gray");
        guiChkGray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guiChkGrayActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, guiLblRed, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(guiRed, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, guiLblGreen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, guiLblBlue, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, guiGreen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(guiBlue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(guiChkRGB))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(guiChkGray)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, guiLblGray, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, guiGray, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
        );

        layout.linkSize(new java.awt.Component[] {guiBlue, guiGray, guiGreen, guiLblBlue, guiLblGray, guiLblGreen, guiLblRed, guiRed}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(guiChkGray)
                    .add(guiChkRGB))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jSeparator1)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(guiLblRed, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(guiRed, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(guiLblGreen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(guiGreen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(guiLblBlue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(guiBlue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(guiLblGray, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(guiGray, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
        );
    }// </editor-fold>//GEN-END:initComponents

private void guiChkGrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guiChkGrayActionPerformed
    lock();
}//GEN-LAST:event_guiChkGrayActionPerformed

private void guiChkRGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guiChkRGBActionPerformed
    lock();
}//GEN-LAST:event_guiChkRGBActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup group;
    private org.geotools.gui.swing.style.sld.JSelectedChannelTypePane guiBlue;
    private javax.swing.JRadioButton guiChkGray;
    private javax.swing.JRadioButton guiChkRGB;
    private org.geotools.gui.swing.style.sld.JSelectedChannelTypePane guiGray;
    private org.geotools.gui.swing.style.sld.JSelectedChannelTypePane guiGreen;
    private org.jdesktop.swingx.JXTitledSeparator guiLblBlue;
    private org.jdesktop.swingx.JXTitledSeparator guiLblGray;
    private org.jdesktop.swingx.JXTitledSeparator guiLblGreen;
    private org.jdesktop.swingx.JXTitledSeparator guiLblRed;
    private org.geotools.gui.swing.style.sld.JSelectedChannelTypePane guiRed;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
